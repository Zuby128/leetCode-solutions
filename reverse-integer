Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1


SOLUTION
/**
 * @param {number} x
 * @return {number}
 */
var reverse = function(x) {
    let limit = (x < 0) ? '2147483648' : '2147483647';
	let reversed = Math.abs(x).toString().split('').reverse().join('');
    
	if (reversed.length === 10) {
		for (let i = 0; i < reversed.length; i++) {
			if (reversed[i] > limit[i]) return 0
			if (limit[i] > reversed[i]) break;
		}
	}
  
	return (x < 0) ? Number('-' + reversed) : Number(reversed)
};
